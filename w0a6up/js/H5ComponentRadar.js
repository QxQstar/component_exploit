/* 雷达图组件对象 */
function H5ComponentRadar(name,cfg){
    var component = new H5ComponentBase(name,cfg);
    //一个画布
    canvas = document.createElement('canvas');
    context = canvas.getContext('2d');
    var w = canvas.width = context.width = cfg.width;
    var h = canvas.height = context.height = cfg.height;
    var a = w/2;
    var b = h/2;
    var num = cfg.data.length;
    var r = w/2;
    var offsetAngle = 360/num;
    var hudu = 2 * Math.PI/360;
    //画雷达背景和伞骨
    var step = 10;//分成10份
    var isBlue = false;
    for(var i = step ; i> 0;i--){
        context.fillStyle = (isBlue = !isBlue) ? "#99c0ff" :"#f1f9f3";
        context.beginPath();
        for(var j = 0;j<num;j++){
            var angle = (j * offsetAngle) * hudu;
            context.lineTo(a + (r/step * i)*Math.cos(angle),b - (r/step* i) *Math.sin(angle));
        }
        context.closePath();
        context.fill();
        //绘制伞骨
        context.strokeStyle = "#e0e0e0";
        for(j = 0;j<num;j++){
            angle = (j * offsetAngle) * hudu;
            context.beginPath();
            context.moveTo(a,b);
            context.lineTo(a + r*Math.cos(angle),b - r *Math.sin(angle));
            context.stroke();
        }
    }
    component.append(canvas);
    //数据层
    canvas = document.createElement('canvas');
    context = canvas.getContext('2d');
    canvas.width = context.width = w;
    canvas.height = context.height = h;
    function draw(per) {
        context.clearRect(0,0,w,h);
        context.strokeStyle = "#f00";
        context.beginPath();
        for (i = 0; i < num; i++) {
            angle = hudu * i * offsetAngle;
            r = w/2;
            r = r * cfg.data[i][1] * per;
            context.lineTo(a +  r * Math.cos(angle), b - r * Math.sin(angle));
        }
        context.closePath();
        context.stroke();
        context.fillStyle = '#ff7676';
        for (i = 0; i < num; i++) {
            angle = hudu * i * offsetAngle;
            r = w/2;
            r = r * cfg.data[i][1] * per;
            context.beginPath();
            context.arc(a +  r * Math.cos(angle), b - r * Math.sin(angle),5,0,2*Math.PI);
            context.closePath();
            context.fill();
        }

    }
    component.append(canvas);
    component.on('onLoad',function(){
        var per = 0;
        for(i = 0 ;i < 100;i++){
            setTimeout(function(){
                per+=0.01;
                draw(per);
            },i*10);
        }
    });
    component.on('onLeave',function(){
        var per = 1;
        for(i = 0 ;i < 100;i++){
            setTimeout(function(){
                per-=0.01;
                draw(per);
            },i*10);
        }
    });
    return component;
}
