/* 内容管理对象 */
var H5 = function(){
	this.id = ("h5_" + Math.random()).replace(".","_");
	this.el = $("<div class='h5' id='"+ this.id +"'></div>").hide();
	$("body").append(this.el);
	this.page = [];
	this.addPage = function(name,text){
		var page = $("<div class='h5_page section'></div>");
		if(name != undefined){
			page.addClass("h5_page_"+ name);
		}
		if(text != undefined){
			page.text(text);
		}
		this.el.append(page);
		this.page.push(page);
        if(typeof  this.whenAddPage === 'function'){
            this.whenAddPage();
        }
		return this;
	};
	this.addComponent = function(name,cfg){
		var cfg = cfg || {};
		var component;
		var curPage = this.page.slice(-1)[0];
		//将cfg与{type:"base"}合并，如果cfg中有type属性将覆盖前面对象的type属性
		cfg = $.extend({
			type:"base"
		},cfg);
		switch(cfg.type){
			case "base":
				component = new H5ComponentBase(name,cfg);
				break;
            case "bar":
                component = new H5ComponentBar(name,cfg);
                break;
            case "bar_v":
                component = new H5ComponentBar_v(name,cfg);
                break;
            case "radar":
                component = new H5ComponentRadar(name,cfg);
                break;
            case "polyline":
                component = new H5ComponentPolyline(name,cfg);
                break;
            case "ring":
                component = new H5ComponentRing(name,cfg);
                break;
            case "point":
                component = new H5ComponentPoint(name,cfg);
                break;
            case "pie":
                component = new H5ComponentPie(name,cfg);
                break;
			default :
		}
		curPage.append(component);
		return this;
	};

	this.loader = function(images) {
        var id = this.id;
        if(this._images === undefined){//第一次进入这个函数
            this._images = (images || []).length;//需要加载的图片的数量
            this.loaded = 0;//当家加载的图片的数量
            window.id = this;
            for(var i = 0 ; i < this._images ; i++){
                var img = new Image();
                img.onload = function(){
                    window.id.loader();
                };
                img.src = images[i];
            }
            $("#rate").text('0%');
            debugger;
            return this;
        }else{
            this.loaded ++;
            $('#rate').text((this.loaded / this._images * 100) >> 0 + '%');
            debugger;
            //如果图片还没有加载完，就不执行下面的代码，return this 退出函数
            if(this._loaded < this._images){
                return this;
            }
        }


        this.el.fullpage({
            onLeave:function(index,nextIndex,dri){
                $(this).find('.h5_Component').trigger("onLeave");
            },
            afterLoad:function(anchorIndex,index){
                $(this).find('.h5_Component').trigger('onLoad');
            }
        });
        this.el.find(".h5_page").eq(0).find(".h5_Component").trigger("onLoad");
        this.el.show();
        return this;
    };
};
