/* 内容管理对象 */
var H5 = function(){
	this.id = ("h5_" + Math.random()).replace(".","_");
	this.el = $("<div class='h5' id='"+ this.id +"'></div>").hide();
	$("body").append(this.el);
	this.page = [];
	this.addpage = function(name,text){
		var page = $("<div class='h5_page section'></div>");
		if(name != undefined){
			page.addClass("h5_page_"+ name);
		}
		if(text != undefined){
			page.text(text);
		}
		this.el.append(page);
		this.page.push(page);
		return this;
	};
	this.addComponent = function(name,cfg){
		var cfg = cfg || {};
		var component;
		var curPage = this.page.slice(-1)[0];
		//将cfg与{type:"base"}合并，如果cfg中有type属性将覆盖前面对象的type属性
		cfg = $.extend({
			type:"base"
		},cfg);
		switch(cfg.type){
			case "base":
				component = new H5ComponentBase(name,cfg);
				break;
			default :

		}
		curPage.append(component);
		return this;
	};

	this.loader = function(){
		this.el.fullpage({
			onLeave:function(index,nextIndex,dri){
				$(".h5").find(".h5_page").eq(index-1).find(".h5_Component").trigger("onLeave");
			},
			afterLoad:function(anchorIndex,index){
				$('.h5').find(".h5_page").eq(index-1).find(".h5_Component").trigger('onLoad');
			}
		});
		this.el.find(".h5_page").eq(0).find(".h5_Component").trigger("onLoad");
		this.el.show();
	};
	return this;
};
